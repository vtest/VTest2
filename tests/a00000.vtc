varnishtest "Test varnishtest itself"

shell -exit 1 -expect {usage: varnishtest} {varnishtest -h}

shell -exit 1 -match {-D.*Define macro} {varnishtest -h}

shell {
	pwd
	echo 'notvarnishtest foo bar' > _.vtc
	echo 'shell "exit 9"' >> _.vtc
}

shell -exit 2 -expect {doesn't start with 'varnishtest'} {
	varnishtest -v _.vtc
}

shell -exit 77 -expect {0 tests failed, 1 tests skipped, 0 tests passed} {
	unset TMPDIR
	varnishtest -k _.vtc
}

# Test external macro-def with a a two-turtle test
shell -expect {__=barf} {
	echo varnishtest foo > _.vtc
	printf 'shell {echo %c{foobar} > ${tmpdir}/__}' '$'  >> _.vtc
	varnishtest -q -Dfoobar=barf _.vtc
	echo __=`cat __`
}

# Test a test failure
shell -exit 2 -expect {TEST _.vtc FAILED} {
	echo varnishtest foo > _.vtc
	echo 'shell {false}' >> _.vtc
	exec varnishtest -v _.vtc || true
}

# Test a test skip
shell -exit 77 -expect {TEST _.vtc skipped} {
	echo varnishtest foo > _.vtc
	echo 'feature cmd false' >> _.vtc
	exec varnishtest -v _.vtc || true
}

process p1 "ps -lw | grep '[p][s]' ; tty ; sleep 1" -run -screen_dump

process p2 "stty -a ; sleep 1" -run -screen_dump

process p3 -hexdump {stty raw; echo "*" ; dd bs=254 count=1 | tee /tmp/_1} -start

process p3 -need-bytes 2

process p3 -write "\x1b[H\x1b[2J1\x1b[79C2\x08>\x1b[25;1H3\x1b[25;80H4\x08>\x1b[A\x1b[Cv\x1b[22A^\x1b[79D^\x1b[;2H<\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x08<\x1b[24;Hv\x1b[12;1H111111112222222333333\x0d\x0a111111112222222333333\x0d\x0a111111112222222333333\x0d\x0a111111112222222333333\x0d\x0a\x1b[12;12H\x1b[K\x1b[13;12H\x1b[0K\x1b[14;12H\x1b[1K\x1b[15;12H\x1b[2K\x1b[3;1Hline3 <\x0d\x0a"

process p3 -need-bytes 256 -screen_dump -wait
